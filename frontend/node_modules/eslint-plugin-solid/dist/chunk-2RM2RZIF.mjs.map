{"version":3,"sources":["../src/configs/typescript.ts"],"sourcesContent":["import type { TSESLint } from \"@typescript-eslint/utils\";\nimport { Linter } from \"eslint\";\n\nimport recommended from \"./recommended\";\n\nconst typescript = {\n  // no files; either apply to all files, or let users spread in this config\n  // and specify matching patterns. This is eslint-plugin-react's take.\n  plugins: recommended.plugins,\n  // no languageOptions; ESLint's default parser can't parse TypeScript,\n  // and parsers are configured in languageOptions, so let the user handle\n  // this rather than cause potential conflicts\n  rules: {\n    ...recommended.rules,\n    \"solid/jsx-no-undef\": [2, { typescriptEnabled: true }] satisfies Linter.RuleEntry,\n    // namespaces taken care of by TS\n    \"solid/no-unknown-namespaces\": 0,\n  },\n} satisfies TSESLint.FlatConfig.Config;\n\nexport = typescript;\n"],"mappings":";;;;;;;AAAA;AAAA;AAGA,6BAAwB;AAExB,QAAM,aAAa;AAAA;AAAA;AAAA,MAGjB,SAAS,mBAAAA,QAAY;AAAA;AAAA;AAAA;AAAA,MAIrB,OAAO;AAAA,QACL,GAAG,mBAAAA,QAAY;AAAA,QACf,sBAAsB,CAAC,GAAG,EAAE,mBAAmB,KAAK,CAAC;AAAA;AAAA,QAErD,+BAA+B;AAAA,MACjC;AAAA,IACF;AAEA,qBAAS;AAAA;AAAA;","names":["recommended"]}